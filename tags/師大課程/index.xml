<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>師大課程 on jw910731's Blog</title><link>/tags/%E5%B8%AB%E5%A4%A7%E8%AA%B2%E7%A8%8B/</link><description>Recent content in 師大課程 on jw910731's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>jw910731© {year}</copyright><lastBuildDate>Fri, 18 Sep 2020 15:39:55 +0800</lastBuildDate><atom:link href="/tags/%E5%B8%AB%E5%A4%A7%E8%AA%B2%E7%A8%8B/index.xml" rel="self" type="application/rss+xml"/><item><title>毒L紀 程設一[1] Hello World與如何編譯</title><link>/blog/comp-prog-i-1/</link><pubDate>Fri, 18 Sep 2020 15:39:55 +0800</pubDate><guid>/blog/comp-prog-i-1/</guid><description>Programming 上課範例程式 #include &amp;lt;stdio.h&amp;gt; int main(){ printf(&amp;quot;Hello World!\n&amp;quot;); return 0; } main是C語言定義的Entry Point，程式執行後會呼叫main。
printf是格式化輸出的函數，型別為int printf ( const char * format, ... )，也就是說輸入一個「格式化字串」(型別為內容為常數的字元陣列(也是指標))，以及多個格式化字串所需的參數，輸出格式化字串格式化後的結果到標準輸出流。格式化字串的格式以連結為例！
return 0;事實上是main函數回傳給系統的Exit Code，可以代表程式結束的狀況是正常還是異常，以Linux而言0是正常退出。
毒瘤程式 #include &amp;lt;unistd.h&amp;gt; int main(){ char s[]=&amp;quot;Hello World!\n&amp;quot;; write(STDOUT_FILENO, s, sizeof(s)); return 0; } 不要問，裸的輸出Fixed Length Byte到stdout的人是瘋子。
編譯與執行 安利個編譯參數，如下：
gcc -O2 -std=c11 -Wall -Wextra -o &amp;lt;輸出檔案&amp;gt; &amp;lt;原始碼&amp;gt; 解釋個參數
-O2 幫你優化程式，讓你奇怪的錯誤更容易被發現 -std=c11 告訴編譯器你要寫的程式要用C11的標準來編譯 -Wall -Wextra 叫編譯器多檢查些，但這樣就會出現程式可以編譯，卻會出現警告訊息的狀況，多出來的警告訊息就斟酌參考吧！ 請記得把&amp;lt;原始碼&amp;gt;替換成自己source file的名稱，&amp;lt;輸出檔案&amp;gt;換成你想要編譯完的程式想要的名字</description></item><item><title>毒L紀 程設一[0] 垃圾話與傳教</title><link>/blog/comp-prog-i-0/</link><pubDate>Wed, 16 Sep 2020 22:55:30 +0800</pubDate><guid>/blog/comp-prog-i-0/</guid><description>垃圾話 毒L紀 = 毒瘤+Linux紀 意指我以毒瘤的稱號讚嘆這個老師足夠狂，敢搬這麼毒瘤的東西出來給大家吸 總之這個系列不定期推出 會放點你可能必須知道的東西，也會放些不建議你抄也不太健康的東西 如何判斷不太健康，就是你感覺看不懂，貼進Google也查不太到正常的解釋，就是不健康 總之什麼都有什麼都不奇怪
設置Linux環境 Virtual Machine 你的選擇有
大陸正版的VMware 免費難用的Virtual box 自由選擇 如何安裝請相信Google小姐的力量 WSL 2 真的很香，究竟更新到2版後有什麼差請見官方比較表 但總之建議不要用WSL 1惹L紀森77，而且那很毒瘤。 安裝教學可以Google也可以看微軟把拔ㄞㄉ教學 總之這傢伙可以給你一個Linux的Command Prompt(命令列)，而且你不需要手動分配固定大小的記憶體給他，他會自己想辦法，網路也互通，檔案可以從/mnt底下看到你的C槽D槽，但不太建議你把平常Linux的檔案放在Windows的檔案目錄下，不然存取檔案的效能可能會GG
設置編寫環境 原生/虛擬機環境 強推Sublime Text 3給你舒服編譯環境 即使是Mac的使用者也可以一起來喔 這裡送上推薦必備的Plugin
Chineese Localization SublimeLinter SublimeLinter-gcc 其中SublimeLinter-gcc在安裝時會提供預設的設定檔，可以跟著附贈的教學操作，使用預設設定檔，就可以有即時的語法檢查了 目前一鍵舒服編譯的工具目前只支援C++，就不放上來了，等我慢慢更新吧QwQ WSL 2 可以使用Visual Studio Code(不是Visual Studio ! ! )的Remote - WSL來在WSL內的環境開發 有興趣的人可以研究看看，我沒在用這個寫C
Migrate from C++ 總之如果你之前寫了C++，有些習慣語法需要改一下
#include &amp;lt;cxxx&amp;gt; -&amp;gt; #include &amp;lt;xxx.h&amp;gt; 如題，你以前#include &amp;lt;cstdio&amp;gt;現在要#include &amp;lt;stdio.h&amp;gt;
輸入輸出字串啥的 請愛用scanf取代cin，用printf取代cout。 string沒得用了去用char組成的陣列，算陣列長度請用strlen，然後要記得這個函數的時間複雜度有點糟請不要反覆呼叫！ 然後不管是IO還是C String(指由char組成的陣列)都比C++難用不少，就多多體諒這個老傢伙拉&amp;rsquo;_&amp;gt;&amp;rsquo;</description></item></channel></rss>